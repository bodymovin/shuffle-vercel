// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Story {
  id        String @id @default(uuid())
  title     String @db.VarChar(255)
  path      String @db.VarChar(255) @unique
  order     Float @default(0)
  price     Float @default(0)
  payMode   PayMode
  chapters  Chapter[]
}

// For now there is no use for chapters.
// Keeping it in case it makes sense to store the width and height of highlight in the future

model Chapter {
  id      String         @id @default(uuid())
  type    ChapterType
  story   Story       @relation(fields: [storyId], references: [id])
  storyId String

  @@unique([storyId, type], name: "storyChapterType")
  @@index([storyId])
}

model User {
  id       String         @id @default(uuid())
  email    String @unique
  name     String
  password String
  games   Int @default(0)
}

model Profile {
  id      String @unique
  name    String @default("")
  games   Int @default(0)
  stripe_customer   String @default("")
  userStories UserStory[]
  userCartItems Cart[]
}

model UserStory {
  id       String         @id @default(uuid())
  user     Profile        @relation(fields: [userId], references: [id])
  userId   String
  storyId  String
  @@index([userId])
  @@unique([userId, storyId], name: "userStory")
}

model Cart {
  id       String         @id @default(uuid())
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  userId      String
  productId  String
  status    PurchaseStatus
  user        Profile        @relation(fields: [userId], references: [id])
  @@index([userId])
  @@unique([userId, productId], name: "userProduct")
}

model Product {
  id       String         @id @default(uuid())
  createdAt DateTime     @default(now())
  itemId      String
  itemType  ProductType
  priceId String
}

model Purchase {
  id       String         @id @default(uuid())
  createdAt DateTime     @default(now())
  userId    String
  intentId  String
  cartItems String
  status  PurchaseStatus
  @@index([intentId])
}

enum ChapterType {
  character    @map("character")
  partner      @map("partner")
  object       @map("object")
  vehicle      @map("vehicle")
  path         @map("path")
  destination  @map("destination")

  @@map("_ChapterType")
}

enum PayMode {
  free    @map("free")
  games    @map("games")
  paid @map("paid")

  @@map("_PayMode")
}


enum ProductType {
  story    @map("story")
  bundle    @map("bundle")
  @@map("_ProductType")
}

enum PurchaseStatus {
  pending    @map("pending")
  processing    @map("processing")
  cancelled    @map("cancelled")
  complete    @map("complete")
  deleted    @map("deleted")
  @@map("_PurchaseStatus")
}
